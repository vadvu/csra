[{"path":"https://vadvu.github.io/csra/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 csra authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://vadvu.github.io/csra/articles/csra.html","id":"some-r-for-csra-studentsinterns","dir":"Articles","previous_headings":"","what":"Some R for CSRA students/interns","title":"Get started with csra","text":"Rstudio Cheatsheet. Good practical books/resources statistics R: 1, 2, 3, 4. Visualization R: 1, 2, 3. Also note extremely powerful package sjPlot provides regression tables, marginal effects, contingency tables etc.","code":""},{"path":"https://vadvu.github.io/csra/articles/csra.html","id":"example-1-equalparts","dir":"Articles","previous_headings":"","what":"Example 1: equalparts()","title":"Get started with csra","text":"basic example shows main (really powerful) function equalparts() works:  note section constructed follows: 1. Pearson’s r (note, \\(Cor(X,Y) = \\frac{Cov(X,Y)}{\\sqrt{D(X)D(Y)}}\\) measures linear association) 2. Lower higher bound 95% CI correlation coefficient square brackets 3. p-value t-statistics brackets (, \\(P(|\\hat{t}|>t_{0.975}(n-1))\\) ). 4. \\(\\chi^2\\) statistics stars indicating \\(p<0.01\\) level significance (note, function \\(^{***}p<0.01, ^{**}p<0.05, ^{*}p<0.1\\) ). Plot returned default can easily changed ggplot2 syntax. Just save function output add ggplot2 blocks:  Also table results can returned, just set return_data = TRUE: columns table : 1. parts - equal subsample. case - sixtiles. 2. Freq_0 - number observations “0” values. 3. Freq_1 - number observations “1” values. 4. means - mean independent variable specific interval (equal part). (scatter plot Freq_1 means basic plot pictured earlier). 5. min - min value independent variable specific interval (equal part). 6. max - max value independent variable specific interval (equal part). 7. prc5 - 5 percentile value independent variable specific interval (equal part). 8. prc95 - 95 percentile value independent variable specific interval (equal part). 9. low95CI - lower Wald 95% interval (2.5%). Wald CI :\\[\\hat{\\pi} \\pm z_{/2}\\times \\sqrt{\\frac{\\hat{\\pi}\\times(1-\\hat{\\pi})}{n}}\\] \\(\\hat{\\pi}\\) estimated probability, \\(z_{/2} = 1.96\\) due 95% CI. 10. high95CI - higher Wald 95% interval (97.5%).","code":"library(csra) data <- data(\"dataex\") #it's an example panel \"long\" data that you can use  #Now let's try to analyze how VDEM democracy index affects revolutionary situations equalparts(   data = datex, #our data   independent = 'VDEM_v2x_polyarchy', #independent var   lag_independent = T, #Should it be lagged? Yes, because political regime can change dramatically during revolutionary year   lag_code = \"iso3\", #by what unit lag is realized (object from country-year, in our case it is iso3 code)   lead = T, #due to data specific in the top we have earlier data - 2019, 2018, 2017, ..., so `lead` should be used. Otherwise, False is needed   dependent = 'NVC_1.3_NONVIOL', #dependent var   n = 6, #number of equal parts. If n = 10, it is decile analysis, 4 - quartile analysis and etc   bar_or_scatter = 'scatter', #plot type, scatter is more powerful   regline = TRUE, #linear regression line   return_data = FALSE, #we want to see plot, so we do not need data   conf_bars = TRUE, #95%CI   range_bars = FALSE, #range (max-min) of independent var in each unit (for ex., decile)   save_plot = FALSE #we do not want to save plot, so its False ) library(csra) library(ggplot2) data(\"datex\")  plot <- equalparts(   data = datex,   independent = 'VDEM_v2x_polyarchy',   lag_independent = T,   lag_code = \"iso3\",   lead = T,   dependent = 'NVC_1.3_NONVIOL',   n = 6,   bar_or_scatter = 'scatter',   regline = TRUE,   return_data = FALSE,   conf_bars = TRUE,   range_bars = FALSE,   save_plot = FALSE )  # for ex., change axis names and theme plot + xlab(\"x var name\") + ylab(\"y var name\") + theme_grey() library(csra) library(ggplot2) data(\"datex\")  equalparts(   data = datex,   independent = 'VDEM_v2x_polyarchy',   lag_independent = T,   lag_code = \"iso3\",   lead = T,   dependent = 'NVC_1.3_NONVIOL',   n = 6,   bar_or_scatter = 'scatter',   regline = TRUE,   return_data = TRUE, #here   conf_bars = TRUE,   range_bars = FALSE,   save_plot = FALSE ) #>    parts Freq_0 Freq_1      means   min   max  prc5 prc95     low95CI #> 7      1   1592     21 0.09029262 0.008 0.145 0.016 0.143 0.007487174 #> 8      2   1583     30 0.17917483 0.145 0.214 0.149 0.210 0.012005542 #> 9      3   1565     48 0.28196590 0.214 0.362 0.220 0.354 0.021465775 #> 10     4   1551     62 0.47658215 0.362 0.600 0.372 0.588 0.029055460 #> 11     5   1578     35 0.71369994 0.601 0.814 0.613 0.801 0.014588331 #> 12     6   1605      7 0.86508437 0.814 0.926 0.820 0.907 0.001132506 #>       high95CI #> 7  0.018551264 #> 8  0.025192226 #> 9  0.038050654 #> 10 0.047819928 #> 11 0.028809065 #> 12 0.007552358"},{"path":"https://vadvu.github.io/csra/articles/csra.html","id":"example-2-u_shape_test","dir":"Articles","previous_headings":"","what":"Example 2: U_shape_test()","title":"Get started with csra","text":"Another function (DEMO stage) U_shape_test(), aims detect hump-shaped forms links. Currently, rare events logistic model implemented, although logic suitable GLMs. U-shape? Simply put, link variables similar parabola. Usually, modeled polynomial term regression equitation, ’s one option. really important case U-shape one extreme point (parabola ). Moreover, slope curve positive (negative) interval \\([x_{min},x_{midpoint}]\\) negative (positive) interval \\([x_{midpoint},x_{max}]\\). Let’s say equation:\\[y_i = \\beta_0 + \\beta_1\\times x_i + \\beta_2\\times f(x_i) + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i\\] \\(\\beta_k\\) coefficients, \\(x\\) variable interest assume U-shape relationship \\(y\\) part formula: \\(\\beta_1\\times x_i + \\beta_2\\times f(x_i)\\), \\(z_{k}\\) control variables, \\(y\\) dependent variable \\(\\varepsilon\\) error term. definition U-shape described earlier, inequality implied:\\[\\beta_1 + \\beta_2\\times f'(x_i \\[x_{min},x_{midpoint}]) <0<\\beta_1 + \\beta_2\\times f'(x_i \\[x_{midpoint}, x_{max}])\\] condition can reformulated 2 hypotheses subsampled models:\\[y_i = \\beta_0 + \\beta_{lower}\\times x_i + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i, x \\[x_{min},x_{midpoint}] (1)\\] \\[y_i = \\beta_0 + \\beta_{higher}\\times x_i + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i, x \\[x_{midpoint}, x_{max}] (2)\\] hypotheses (inverse U-shape): + \\(H_L: \\beta_{lower}>0\\), equitation 1 + \\(H_H: \\beta_{higher}<0\\), equitation 2 method function U_shape_test() operates complicated following way: 1. full model estimated sample polynomial term. Let’s say :\\[y_i = \\beta_0 + \\beta_1\\times x_i + \\beta_2\\times x_i^2 + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i\\] \\(\\beta_k\\) coefficients, \\(x\\) variable interest assume U-shape relationship \\(y\\), \\(z_{k}\\) control variables, \\(y\\) dependent variable \\(\\varepsilon\\) error term. 2. Divide sample two subsamples - first midpoint (identified vertex parabola polynomial term: \\(\\frac{-\\beta_1}{2\\times \\beta_2}\\)), second . 3. Estimate two models two subsamples. hump-shaped relationship assumes ascending descending part. , order test hump, necessary significant positive negative coefficients first second subsample respectively. 4. semiparametric model estimated without assumptions form link. GAM method used purpose. variable interest modelled smooth term using cubic splines variables modelled using parametric regressions. case :\\[y_i = \\beta_0 + f(x_i) + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i\\] \\(f(x_i)\\) smooth term. 5. ANOVA test model polynomial term (1st step) GAM model (4th step). test needed identify whether polynomial term provides better worse fit link found GAM splines. \\(p > 0.1\\), polynomial considered good approximation. 6. Bootstrap midpoint (\\(\\frac{-\\beta_1}{2\\times \\beta_2}\\)) constructing CI. optional, highly recommended stage. Now works unstable function… 7. final stage.polynomial term significant (1st stage) significant opposite signs subsamples (2nd stage), GAM term significant terms EDF significance (4th stage), ANOVA test’s p-value greater 0.1 (5th stage), exists hump-shaped U-shaped link variables. case, polynomial term suitable approximating relationship. approach based 2 papers define overall strategy identifying U-shaped relationship continuous data (.e. linear regression model): - Lind, J. T., & Mehlum, H. (2010). without U? appropriate test U‐shaped relationship. Oxford bulletin economics statistics, 72(1), 109-118. - Simonsohn, U. (2018). Two lines: valid alternative invalid testing U-shaped relationships quadratic regressions. Advances Methods Practices Psychological Science, 1(4), 538-555.","code":"library(csra) data(\"datex\")  U_shape_test(   data = datex, #our data   dep = \"NVC_1.3_NONVIOL\", #dependent variable   ind = \"VDEM_v2x_polyarchy_lag\", #independent var   cnt = c(\"UN_Median_Age\", \"UN_Total_Population_log\"), #control vars   boot = \"none\", #bootstrap for middle point analysis - we do not use it in an example    n = 1000, #number of bootstrap deaws   const = T, #We need constan in a model   HC = T, #type of SE   plot = T,   tab_save = FALSE #we do not need to save regression table ) #>  #> ====================================================== #>                                Dependent variable:     #>                            --------------------------- #>                                                        #> ------------------------------------------------------ #> VDEM_v2x_polyarchy_lag              8.544***           #>                                      (1.328)           #> I(VDEM_v2x_polyarchy_lag2)         -10.989***          #>                                      (1.461)           #> UN_Median_Age                       0.044***           #>                                      (0.011)           #> UN_Total_Population_log             0.351***           #>                                      (0.045)           #> Constant                            -8.941***          #>                                      (0.519)           #> ------------------------------------------------------ #> N                                     8400             #> AIC                                  1768.79           #> U-shape test:                                          #> Extremum                              0.39             #> Xlower                          2.49 (p = 0.0065)      #> Xhigher                           -5.62 (p = 0)        #> GAM edf                           3.16 (p = 0)         #> AIC glm - AIC gam                     -2.84            #> ====================================================== #> Note:                      *p<0.1; **p<0.05; ***p<0.01"},{"path":[]},{"path":"https://vadvu.github.io/csra/articles/csra.html","id":"goldstone-regime-type-classification","dir":"Articles","previous_headings":"Some additional functions","what":"Goldstone regime type classification","title":"Get started with csra","text":"Goldstone et al. (2010) proposed new regime type classification based Polity-V project. approach distinguishes five types political regimes based two indicators Polity database – EXREC (Executive Recruitment) PARCOMP (Competitiveness Political Participation). Function goldclass provide ability recode Polity-V data 5-class variable: 1. full autocracy 2. partial autocracy 3. partial democracy 4. partial democracy factionalism 5. full democracy","code":"polity5data$goldstone_regime <- goldclass(exrec = polity5data$exrec, parcomp = polity5data$parcomp)"},{"path":"https://vadvu.github.io/csra/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vadim Ustyuzhanin. Author, maintainer.","code":""},{"path":"https://vadvu.github.io/csra/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ustyuzhanin V (2024). csra: Analysis count data. R package version 1.1.1, https://vadvu.github.io/csra/.","code":"@Manual{,   title = {csra: Analysis of count data},   author = {Vadim Ustyuzhanin},   year = {2024},   note = {R package version 1.1.1},   url = {https://vadvu.github.io/csra/}, }"},{"path":"https://vadvu.github.io/csra/index.html","id":"csra","dir":"","previous_headings":"","what":"Analysis of count data","title":"Analysis of count data","text":"Installation R CSRA students/interns Example 1: equalparts() Example 2: U_shape_test() Goldstone regime type classification csra package functions used CSRA staff analyze political events.","code":""},{"path":"https://vadvu.github.io/csra/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analysis of count data","text":"can install development version csra GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"vadvu/csra\")"},{"path":"https://vadvu.github.io/csra/index.html","id":"some-r-for-csra-studentsinterns","dir":"","previous_headings":"","what":"Some R for CSRA students/interns","title":"Analysis of count data","text":"Rstudio Cheatsheet. Good practical books/resources statistics R: 1, 2, 3, 4. Visualization R: 1, 2, 3. Also note extremely powerful package sjPlot provides regression tables, marginal effects, contingency tables etc.","code":""},{"path":"https://vadvu.github.io/csra/index.html","id":"example-1-equalparts","dir":"","previous_headings":"","what":"Example 1: equalparts()","title":"Analysis of count data","text":"basic example shows main (really powerful) function equalparts() works:  note section constructed follows: 1. Pearson’s r (note, $Cor(X,Y) = \\frac{Cov(X,Y)}{\\sqrt{D(X)D(Y)}}$ measures linear association) 2. Lower higher bound 95% CI correlation coefficient square brackets 3. p-value t-statistics brackets (, P(|t̂|>t0.975(n−1)) ). 4. χ2 statistics stars indicating p < 0.01 level significance (note, function * * *p < 0.01,**p < 0.05,*p < 0.1 ). Plot returned default can easily changed ggplot2 syntax. Just save function output add ggplot2 blocks:  Also table results can returned, just set return_data = TRUE: columns table : 1. parts - equal subsample. case - sixtiles. 2. Freq_0 - number observations “0” values. 3. Freq_1 - number observations “1” values. 4. means - mean independent variable specific interval (equal part). (scatter plot Freq_1 means basic plot pictured earlier). 5. min - min value independent variable specific interval (equal part). 6. max - max value independent variable specific interval (equal part). 7. prc5 - 5 percentile value independent variable specific interval (equal part). 8. prc95 - 95 percentile value independent variable specific interval (equal part). 9. low95CI - lower Wald 95% interval (2.5%). Wald CI :$$\\hat{\\pi} \\pm z_{/2}\\times \\sqrt{\\frac{\\hat{\\pi}\\times(1-\\hat{\\pi})}{n}}$$ π̂ estimated probability, za/2 = 1.96 due 95% CI. 10. high95CI - higher Wald 95% interval (97.5%).","code":"library(csra) data <- data(\"dataex\") #it's an example panel \"long\" data that you can use  #Now let's try to analyze how VDEM democracy index affects revolutionary situations equalparts(   data = datex, #our data   independent = 'VDEM_v2x_polyarchy', #independent var   lag_independent = T, #Should it be lagged? Yes, because political regime can change dramatically during revolutionary year   lag_code = \"iso3\", #by what unit lag is realized (object from country-year, in our case it is iso3 code)   lead = T, #due to data specific in the top we have earlier data - 2019, 2018, 2017, ..., so `lead` should be used. Otherwise, False is needed   dependent = 'NVC_1.3_NONVIOL', #dependent var   n = 6, #number of equal parts. If n = 10, it is decile analysis, 4 - quartile analysis and etc   bar_or_scatter = 'scatter', #plot type, scatter is more powerful   regline = TRUE, #linear regression line   return_data = FALSE, #we want to see plot, so we do not need data   conf_bars = TRUE, #95%CI   range_bars = FALSE, #range (max-min) of independent var in each unit (for ex., decile)   save_plot = FALSE #we do not want to save plot, so its False ) library(csra) library(ggplot2) data(\"datex\")  plot <- equalparts(   data = datex,   independent = 'VDEM_v2x_polyarchy',   lag_independent = T,   lag_code = \"iso3\",   lead = T,   dependent = 'NVC_1.3_NONVIOL',   n = 6,   bar_or_scatter = 'scatter',   regline = TRUE,   return_data = FALSE,   conf_bars = TRUE,   range_bars = FALSE,   save_plot = FALSE )  # for ex., change axis names and theme plot + xlab(\"x var name\") + ylab(\"y var name\") + theme_grey() library(csra) library(ggplot2) data(\"datex\")  equalparts(   data = datex,   independent = 'VDEM_v2x_polyarchy',   lag_independent = T,   lag_code = \"iso3\",   lead = T,   dependent = 'NVC_1.3_NONVIOL',   n = 6,   bar_or_scatter = 'scatter',   regline = TRUE,   return_data = TRUE, #here   conf_bars = TRUE,   range_bars = FALSE,   save_plot = FALSE ) #>    parts Freq_0 Freq_1      means   min   max  prc5 prc95     low95CI #> 7      1   1592     21 0.09029262 0.008 0.145 0.016 0.143 0.007487174 #> 8      2   1583     30 0.17917483 0.145 0.214 0.149 0.210 0.012005542 #> 9      3   1565     48 0.28196590 0.214 0.362 0.220 0.354 0.021465775 #> 10     4   1551     62 0.47658215 0.362 0.600 0.372 0.588 0.029055460 #> 11     5   1578     35 0.71369994 0.601 0.814 0.613 0.801 0.014588331 #> 12     6   1605      7 0.86508437 0.814 0.926 0.820 0.907 0.001132506 #>       high95CI #> 7  0.018551264 #> 8  0.025192226 #> 9  0.038050654 #> 10 0.047819928 #> 11 0.028809065 #> 12 0.007552358"},{"path":"https://vadvu.github.io/csra/index.html","id":"example-2-u_shape_test","dir":"","previous_headings":"","what":"Example 2: U_shape_test()","title":"Analysis of count data","text":"Another function (DEMO stage) U_shape_test(), aims detect hump-shaped forms links. Currently, rare events logistic model implemented, although logic suitable GLMs. U-shape? Simply put, link variables similar parabola. Usually, modeled polynomial term regression equitation, ’s one option. really important case U-shape one extreme point (parabola ). Moreover, slope curve positive (negative) interval [xmin,xmidpoint] negative (positive) interval [xmidpoint,xmax]. Let’s say equation:$$y_i = \\beta_0 + \\beta_1\\times x_i + \\beta_2\\times f(x_i) + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i$$ βk coefficients, x variable interest assume U-shape relationship y part formula: β1 × xi + β2 × f(xi), zk control variables, y dependent variable ε error term. definition U-shape described earlier, inequality implied:β1 + β2 × f′(xi∈[xmin,xmidpoint]) < 0 < β1 + β2 × f′(xi∈[xmidpoint,xmax]) condition can reformulated 2 hypotheses subsampled models:$$y_i = \\beta_0 + \\beta_{lower}\\times x_i + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i, x \\[x_{min},x_{midpoint}] (1)$$ $$y_i = \\beta_0 + \\beta_{higher}\\times x_i + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i, x \\[x_{midpoint}, x_{max}] (2)$$ hypotheses (inverse U-shape): + HL : βlower > 0, equitation 1 + HH : βhigher < 0, equitation 2 method function U_shape_test() operates complicated following way: 1. full model estimated sample polynomial term. Let’s say :$$y_i = \\beta_0 + \\beta_1\\times x_i + \\beta_2\\times x_i^2 + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i$$ βk coefficients, x variable interest assume U-shape relationship y, zk control variables, y dependent variable ε error term. 2. Divide sample two subsamples - first midpoint (identified vertex parabola polynomial term: $\\frac{-\\beta_1}{2\\times \\beta_2}$), second . 3. Estimate two models two subsamples. hump-shaped relationship assumes ascending descending part. , order test hump, necessary significant positive negative coefficients first second subsample respectively. 4. semiparametric model estimated without assumptions form link. GAM method used purpose. variable interest modelled smooth term using cubic splines variables modelled using parametric regressions. case :$$y_i = \\beta_0 + f(x_i) + \\sum_{}^{} \\beta_k \\times z_{,k} + \\varepsilon_i$$ f(xi) smooth term. 5. ANOVA test model polynomial term (1st step) GAM model (4th step). test needed identify whether polynomial term provides better worse fit link found GAM splines. p > 0.1, polynomial considered good approximation. 6. Bootstrap midpoint ($\\frac{-\\beta_1}{2\\times \\beta_2}$) constructing CI. optional, highly recommended stage. Now works unstable function… 7. final stage.polynomial term significant (1st stage) significant opposite signs subsamples (2nd stage), GAM term significant terms EDF significance (4th stage), ANOVA test’s p-value greater 0.1 (5th stage), exists hump-shaped U-shaped link variables. case, polynomial term suitable approximating relationship. approach based 2 papers define overall strategy identifying U-shaped relationship continuous data (.e. linear regression model): - Lind, J. T., & Mehlum, H. (2010). without U? appropriate test U‐shaped relationship. Oxford bulletin economics statistics, 72(1), 109-118. - Simonsohn, U. (2018). Two lines: valid alternative invalid testing U-shaped relationships quadratic regressions. Advances Methods Practices Psychological Science, 1(4), 538-555.","code":"library(csra) data(\"datex\")  U_shape_test(   data = datex, #our data   dep = \"NVC_1.3_NONVIOL\", #dependent variable   ind = \"VDEM_v2x_polyarchy_lag\", #independent var   cnt = c(\"UN_Median_Age\", \"UN_Total_Population_log\"), #control vars   boot = \"none\", #bootstrap for middle point analysis - we do not use it in an example    n = 1000, #number of bootstrap deaws   const = T, #We need constan in a model   HC = T, #type of SE   plot = T,   tab_save = FALSE #we do not need to save regression table ) #>  #> ====================================================== #>                                Dependent variable:     #>                            --------------------------- #>                                                        #> ------------------------------------------------------ #> VDEM_v2x_polyarchy_lag              8.544***           #>                                      (1.328)           #> I(VDEM_v2x_polyarchy_lag2)         -10.989***          #>                                      (1.461)           #> UN_Median_Age                       0.044***           #>                                      (0.011)           #> UN_Total_Population_log             0.351***           #>                                      (0.045)           #> Constant                            -8.941***          #>                                      (0.519)           #> ------------------------------------------------------ #> N                                     8400             #> AIC                                  1768.79           #> U-shape test:                                          #> Extremum                              0.39             #> Xlower                          2.49 (p = 0.0065)      #> Xhigher                           -5.62 (p = 0)        #> GAM edf                           3.16 (p = 0)         #> AIC glm - AIC gam                     -2.84            #> ====================================================== #> Note:                      *p<0.1; **p<0.05; ***p<0.01"},{"path":[]},{"path":"https://vadvu.github.io/csra/index.html","id":"goldstone-regime-type-classification","dir":"","previous_headings":"Some additional functions","what":"Goldstone regime type classification","title":"Analysis of count data","text":"Goldstone et al. (2010) proposed new regime type classification based Polity-V project. approach distinguishes five types political regimes based two indicators Polity database – EXREC (Executive Recruitment) PARCOMP (Competitiveness Political Participation). Function goldclass provide ability recode Polity-V data 5-class variable: 1. full autocracy 2. partial autocracy 3. partial democracy 4. partial democracy factionalism 5. full democracy","code":"polity5data$goldstone_regime <- goldclass(exrec = polity5data$exrec, parcomp = polity5data$parcomp)"},{"path":"https://vadvu.github.io/csra/reference/U_shape_test.html","id":null,"dir":"Reference","previous_headings":"","what":"U-shape test for rare events logistic regression — U_shape_test","title":"U-shape test for rare events logistic regression — U_shape_test","text":"U-shape test rare events logistic regression","code":""},{"path":"https://vadvu.github.io/csra/reference/U_shape_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U-shape test for rare events logistic regression — U_shape_test","text":"","code":"U_shape_test(   data,   dep,   ind,   cnt,   mod = \"brglm\",   boot = c(\"none\", \"nonparam\", \"factor\"),   factor = NULL,   n = 1000,   HC = T,   const = T,   table_remove = NULL,   plot = F,   tab_save = F )"},{"path":"https://vadvu.github.io/csra/reference/U_shape_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"U-shape test for rare events logistic regression — U_shape_test","text":"data Dataframe dep Character. Dependent variable. ind Character. Independent variable. cnt Vector characters names control variables. mod Character. Type model (now just brglm supported) boot Character. middle point \"lines\" calculated via bootstrap? - \"none\", yes - one can choose bootstrap type factor Character. boot = \"factor\". n Number bootstrap draws HC Logical. heteroscedasticity-consistent SE used? const Logical. constant included models? table_remove Vector variables names excluded regression table. plot Logical. plot depicted? tab_save Logical. table saved? yes - table saved working directory.","code":""},{"path":"https://vadvu.github.io/csra/reference/U_shape_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"U-shape test for rare events logistic regression — U_shape_test","text":"Plot regression table u-shape test summary.","code":""},{"path":"https://vadvu.github.io/csra/reference/U_shape_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"U-shape test for rare events logistic regression — U_shape_test","text":"Lind, J. T., & Mehlum, H. (2010). without U? appropriate test U‐shaped relationship. Oxford bulletin economics statistics, 72(1), 109-118. Simonsohn, U. (2018). Two lines: valid alternative invalid testing U-shaped relationships quadratic regressions. Advances Methods Practices Psychological Science, 1(4), 538-555.","code":""},{"path":[]},{"path":"https://vadvu.github.io/csra/reference/datex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data of revolutionary campaigns and democracy index, 1901-2019 — datex","text":"NAVCO 1.3, VDEM   datex   data NANVCO 1.3 VDEM  datasets","code":""},{"path":"https://vadvu.github.io/csra/reference/datex.html","id":"datex-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"datex A data frame with 9,836 rows and 6 columns:","title":"Data of revolutionary campaigns and democracy index, 1901-2019 — datex","text":"iso3 Country code iso3c year Year NVC_1.3_NONVIOL Year NVC_1.3_VIOL Year VDEM_v2x_polyarchy Electoral democracy index 0,1 VDEM_v2x_polyarchy_lag Electoral democracy index 0,1 time t-1 country ","code":""},{"path":"https://vadvu.github.io/csra/reference/equalparts.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of a binary data by dividing independent into equal parts — equalparts","title":"Analysis of a binary data by dividing independent into equal parts — equalparts","text":"Analysis binary data dividing independent equal parts","code":""},{"path":"https://vadvu.github.io/csra/reference/equalparts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of a binary data by dividing independent into equal parts — equalparts","text":"","code":"equalparts(   data,   independent,   lag_independent = FALSE,   lag_code,   lead = TRUE,   dependent,   n = 6,   nominal_or_percent = \"nominal\",   bar_or_scatter = \"bar\",   regline = TRUE,   range_bars = FALSE,   conf_bars = TRUE,   return_data = FALSE,   save_plot = FALSE,   name_save_plot = \"plot\" )"},{"path":"https://vadvu.github.io/csra/reference/equalparts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of a binary data by dividing independent into equal parts — equalparts","text":"data Dataframe independent Character. Independent variable. lag_independent Logical. independent variable lagged 1 time-unit? lag_code Character. Passed lag_independent False. name variable dataframe subject data. ex., country name, iso3 etc. lead Logical. Passed lag_independent False. lead used instead lag? Lead used case, data's top earlier time units (ex., 2022, 2021, 2020, ...). Lag used data's top starts later time units (1900, 1901, ...). dependent Character. Dependent variable. n Int. Number equal parts independent variable divided. nominal_or_percent Logical. output y-axis (intensity dependent variable) percents nominal values? want scatter plot automatically changed nominal. bar_or_scatter Character 2 possible values: \"bar\", \"scatter\". Type figure plotted. regline Logical. linear regression line plotted? range_bars Logical. range bars shown? Range depicts min max value independent variable divided group. conf_bars Logical. confidence bars shown? depict 95%CI binary dependent variable. return_data Logical. returned data (table)? False, plot returned. save_plot Logical. plot saved working directory? name_save_plot Character. Passed save_plot False. Name plot saving.","code":""},{"path":"https://vadvu.github.io/csra/reference/equalparts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of a binary data by dividing independent into equal parts — equalparts","text":"Plot (bar scatter) dataframe. dataframe following columns: parts: number equal part. first lowest values, last highest values Freq_0: number 0 cases dependent variable Freq_1: number 1 cases dependent variable means: mean independent variable specific equal part min: min value independent variable specific equal part max: max value independent variable specific equal part prc5: 5% percentile independent variable specific equal part prc95: 95% percentile independent variable specific equal part low95CI: lower border 95% CI Freq_1 high95CI: higher border 95% CI Freq_1","code":""},{"path":"https://vadvu.github.io/csra/reference/equalparts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis of a binary data by dividing independent into equal parts — equalparts","text":"","code":"data(\"datex\") equalparts(data = datex, independent = 'VDEM_v2x_polyarchy_lag', lag_independent = FALSE, dependent = 'NVC_1.3_NONVIOL', n = 6, bar_or_scatter = 'scatter', regline= TRUE, return_data = FALSE, conf_bars = TRUE, range_bars = FALSE, save_plot = FALSE)   equalparts(data = datex, independent = 'VDEM_v2x_polyarchy', lag_independent = TRUE, lag_code = \"iso3\", lead = TRUE, dependent = 'NVC_1.3_NONVIOL', n = 10, bar_or_scatter = 'bar', nominal_or_percent = \"percent\", return_data = FALSE, conf_bars = TRUE, save_plot = TRUE, name_save_plot = \"figure1\")"},{"path":"https://vadvu.github.io/csra/reference/goldclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Goldstone claasification of regime types based on Polity-V variables — goldclass","title":"Goldstone claasification of regime types based on Polity-V variables — goldclass","text":"Goldstone claasification regime types based Polity-V variables","code":""},{"path":"https://vadvu.github.io/csra/reference/goldclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Goldstone claasification of regime types based on Polity-V variables — goldclass","text":"","code":"goldclass(exrec, parcomp)"},{"path":"https://vadvu.github.io/csra/reference/goldclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Goldstone claasification of regime types based on Polity-V variables — goldclass","text":"exrec array EXREC variable Polity-V project parcomp array PARCOMP variable Polity-V project","code":""},{"path":"https://vadvu.github.io/csra/reference/goldclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Goldstone claasification of regime types based on Polity-V variables — goldclass","text":"array Goldstone classification: 1 = full autocracy 2 = partial autocracy 3 = partial democracy 4 = partial democracy factionalism 5 = full democracy","code":""},{"path":"https://vadvu.github.io/csra/reference/goldclass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Goldstone claasification of regime types based on Polity-V variables — goldclass","text":"Goldstone, J.., Bates, R.H., Epstein, D.L., Gurr, T.R., Lustik, M.B., Marshall, M.G., Ulfelder, J. & Woodward, M. (2010). Global Model Forecasting Political Instability. American Journal Political Science, 54, 190–208.","code":""},{"path":"https://vadvu.github.io/csra/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://vadvu.github.io/csra/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://vadvu.github.io/csra/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://vadvu.github.io/csra/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
